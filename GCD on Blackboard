#include <bits/stdc++.h>
using namespace std;
#define int long long

signed main() {
    int n;
    cin >> n;
    vector<int> arr(n+1, 0), pre(n+1, 0), suf(n+2, 0);  // suf size should be n+2

    for(int i = 1; i <= n; i++) {
        cin >> arr[i];
    }

    // Compute prefix GCDs
    for(int i = 1; i <= n; i++) {
        pre[i] = __gcd(pre[i-1], arr[i]);
    }

    // Compute suffix GCDs
    for(int i = n; i >= 1; i--) {
        suf[i] = __gcd(suf[i+1], arr[i]);
    }

    int ans = 0;

    // Find the maximum GCD after removing one element
    for(int i = 1; i <= n; i++) {
        ans = max(ans, __gcd(pre[i-1], suf[i+1]));
    }

    cout << ans << "\n";
    return 0;
}
